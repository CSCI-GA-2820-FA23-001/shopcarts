---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:alpine
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-creds
                  key: password
            - name: POSTGRES_USER
              valueFrom:
                  configMapKeyRef:
                    name: postgres-config
                    key: postgres_user
            - name: POSTGRES_DB
              valueFrom:
                  configMapKeyRef:
                    name: postgres-config
                    key: postgres_db
          volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql
          resources:
            limits:
              cpu: "0.50"
              memory: "128Mi"
            requests:
              cpu: "0.25"
              memory: "64Mi"
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - pg_isready -U flask -h localhost
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
        # emptyDir: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
    storageClassName: default

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
data:
  postgres_user: postgres
  postgres_db: shopcarts
# This secret can also be created from the command line using environment variables
#
# export DATABASE_URI='postgresql://<place-url-to-database-here>'
# export POSTGRES_PASSWORD='<place-password-here>'
#
# kubectl create secret generic postgres-creds \
#     --from-literal=password=$POSTGRES_PASSWORD
#     --from-literal=database_uri=$DATABASE_URI
#
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-creds
data:
  password: cG9zdGdyZXM=
  # password: czNjcjN0LWtleS1zaGhoaA==
  database_uri: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBvc3RncmVzQHBvc3RncmVzOjU0MzIvcG9zdGdyZXM=